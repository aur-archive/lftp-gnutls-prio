diff --git a/src/lftp_ssl.cc b/src/lftp_ssl.cc
index b856499..ef43eeb 100644
--- a/src/lftp_ssl.cc
+++ b/src/lftp_ssl.cc
@@ -271,9 +271,17 @@ lftp_ssl_gnutls::lftp_ssl_gnutls(int fd1,handshake_mode_t m,const char *h)
    gnutls_transport_set_ptr(session,(gnutls_transport_ptr_t)fd);
 
    // hack for some ftp servers
-   const char *auth=ResMgr::Query("ftp:ssl-auth", hostname);
-   if(auth && !strncmp(auth, "SSL", 3))
-      gnutls_priority_set_direct(session, "NORMAL:+SSL3.0:-TLS1.0:-TLS1.1:-TLS1.2",0);
+   const char *prio=ResMgr::Query("ftp:ssl-priority", hostname);
+   if(prio)
+   {
+      gnutls_priority_set_direct(session, prio, 0);
+   }
+   else
+   {
+      const char *auth=ResMgr::Query("ftp:ssl-auth", hostname);
+      if(auth && !strncmp(auth, "SSL", 3))
+	 gnutls_priority_set_direct(session, "NORMAL:+SSL3.0:-TLS1.0:-TLS1.1:-TLS1.2",0);
+   }
 }
 void lftp_ssl_gnutls::load_keys()
 {
diff --git a/src/resource.cc b/src/resource.cc
index 06d1d9c..c3b8ee9 100644
--- a/src/resource.cc
+++ b/src/resource.cc
@@ -21,6 +21,10 @@
 
 #include <config.h>
 
+# if USE_GNUTLS
+#  include <gnutls/gnutls.h>
+#endif
+
 #include <pwd.h>
 #include <unistd.h>
 #include <stdlib.h>
@@ -147,6 +151,31 @@ const char *AuthArgValidate(xstring_c *s)
 
    return 0;
 }
+#if USE_GNUTLS
+static
+const char *SSLPriorityValidate(xstring_c *s)
+{
+   if(!**s)
+      return 0;
+
+   gnutls_session_t ses;
+   if (gnutls_init(&ses, GNUTLS_CLIENT) != GNUTLS_E_SUCCESS)
+      return 0;
+
+   int ret = gnutls_priority_set_direct(ses, *s, 0);
+   gnutls_deinit(ses);
+
+   if (ret == GNUTLS_E_INVALID_REQUEST) {
+      return _(
+	 "ftp:ssl-priority string is invalid. "
+	 "Check the GnuTLS manual section on 'Priority strings' for "
+	 "more information on allowed keywords."
+      );
+   }
+
+   return 0;
+}
+#endif
 static
 const char *ProtValidate(xstring_c *s)
 {
@@ -207,6 +236,9 @@ static ResType lftp_vars[] = {
    {"ftp:ssl-protect-fxp",	 "no",    ResMgr::BoolValidate,0},
    {"ftp:ssl-protect-list",	 "yes",   ResMgr::BoolValidate,0},
    {"ftp:ssl-auth",		 "TLS",   AuthArgValidate,0},
+#if USE_GNUTLS
+   {"ftp:ssl-priority",		 "",      SSLPriorityValidate,0},
+#endif
    {"ftp:ssl-allow-anonymous",	 "no",	  ResMgr::BoolValidate,0},
    {"ftp:ssl-use-ccc",		 "no",	  ResMgr::BoolValidate,0},
    {"ftp:ssl-shutdown-timeout",	 "5",	  ResMgr::TimeIntervalValidate,0},
